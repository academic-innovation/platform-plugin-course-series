# Generated by Django 3.2.24 on 2024-05-16 18:56

import uuid

import django.db.models.deletion
from django.db import migrations, models

import opaque_keys.edx.django.models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AuthoringOrganization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uuid", models.UUIDField(default=uuid.uuid4)),
                ("key", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("logo_image", models.ImageField(upload_to="authoring_org/logos")),
            ],
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.CharField(db_index=True, max_length=255)),
                ("uuid", models.UUIDField(default=uuid.uuid4)),
                ("title", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="CourseSeries",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uuid", models.UUIDField(default=uuid.uuid4)),
                ("title", models.CharField(max_length=500)),
                ("details_url", models.URLField()),
                ("banner_image", models.ImageField(upload_to="course_series/banners")),
                (
                    "authoring_organizations",
                    models.ManyToManyField(to="course_series.AuthoringOrganization"),
                ),
            ],
            options={
                "verbose_name_plural": "course series",
            },
        ),
        migrations.CreateModel(
            name="CourseSeriesType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "applicable_seat_type",
                    models.CharField(
                        choices=[
                            ("honor", "Honor"),
                            ("professional", "Professional"),
                            ("verified", "Verified"),
                            ("audit", "Audit"),
                            ("no-id-professional", "No ID Professional"),
                            ("credit", "Credit"),
                            ("masters", "Masters"),
                            ("executive-education", "Executive Education"),
                            ("paid-executive-education", "Paid Executive Education"),
                            (
                                "unpaid-executive-education",
                                "Unpaid Executive Education",
                            ),
                            ("paid-bootcamp", "Paid Bootcamp"),
                            ("unpaid-bootcamp", "Unpaid Bootcamp"),
                        ],
                        max_length=50,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CourseSeriesItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="course_series.course",
                    ),
                ),
                (
                    "series",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="course_series.courseseries",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="courseseries",
            name="courses",
            field=models.ManyToManyField(
                through="course_series.CourseSeriesItem", to="course_series.Course"
            ),
        ),
        migrations.AddField(
            model_name="courseseries",
            name="series_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="course_series.courseseriestype",
            ),
        ),
        migrations.CreateModel(
            name="CourseRun",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("honor", "Honor"),
                            ("professional", "Professional"),
                            ("verified", "Verified"),
                            ("audit", "Audit"),
                            ("no-id-professional", "No ID Professional"),
                            ("credit", "Credit"),
                            ("masters", "Masters"),
                            ("executive-education", "Executive Education"),
                            ("paid-executive-education", "Paid Executive Education"),
                            (
                                "unpaid-executive-education",
                                "Unpaid Executive Education",
                            ),
                            ("paid-bootcamp", "Paid Bootcamp"),
                            ("unpaid-bootcamp", "Unpaid Bootcamp"),
                        ],
                        help_text="Indicates which certificate mode is counted towards completion of a program.",
                        max_length=50,
                    ),
                ),
                ("key", opaque_keys.edx.django.models.CourseKeyField(max_length=255)),
                ("uuid", models.UUIDField(default=uuid.uuid4)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="course_runs",
                        to="course_series.course",
                    ),
                ),
            ],
        ),
    ]
